// Insert into the existing script - update the createFormBuilderComponent function

async function createFormBuilderComponent() {
  const componentData = {
    component: {
      name: 'Form Builder',
      schema: {
        title: {
          type: 'text',
          pos: 0,
          required: false,
          description: 'Form title',
          translatable: true
        },
        description: {
          type: 'textarea',
          pos: 1,
          required: false,
          description: 'Form description',
          translatable: true
        },
        steps: {
          type: 'bloks',
          pos: 2,
          required: true,
          description: 'Form steps (use 1 step for single-page forms)',
          restrict_components: true,
          component_whitelist: ['form_step']
        },
        submit_button_text: {
          type: 'text',
          pos: 3,
          default_value: 'Submit',
          description: 'Submit button text',
          translatable: true
        },
        submit_api_url: {
          type: 'text',
          pos: 4,
          required: false,
          description: 'üÜï API endpoint URL (e.g., https://api.example.com/forms/submit) - If set, form data will be POSTed here'
        },
        submit_method: {
          type: 'option',
          pos: 5,
          default_value: 'POST',
          description: 'üÜï HTTP method for API submission',
          options: [
            { name: 'POST', value: 'POST' },
            { name: 'PUT', value: 'PUT' }
          ]
        },
        show_progress_bar: {
          type: 'boolean',
          pos: 6,
          default_value: true,
          description: 'Show progress bar for multi-step forms?'
        },
        allow_save_draft: {
          type: 'boolean',
          pos: 7,
          default_value: false,
          description: 'Allow users to save draft?'
        },
        success_message: {
          type: 'textarea',
          pos: 8,
          default_value: 'Thank you! Your form has been submitted successfully.',
          description: 'Message shown after successful submission',
          translatable: true
        },
        success_redirect_url: {
          type: 'text',
          pos: 9,
          required: false,
          description: 'URL to redirect to after successful submission (optional)'
        },
        error_message: {
          type: 'textarea',
          pos: 10,
          required: false,
          default_value: 'Failed to submit form. Please try again.',
          description: 'üÜï Custom error message when API submission fails',
          translatable: true
        },
        submit_button_href: {
          type: 'text',
          pos: 11,
          required: false,
          description: '‚ö†Ô∏è DEPRECATED - Use success_redirect_url instead'
        },
        padding: {
          type: 'option',
          pos: 12,
          default_value: 'medium',
          description: 'Vertical padding (top & bottom) for desktop',
          options: [
            { name: 'None (0px)', value: 'none' },
            { name: 'Small (16px)', value: 'small' },
            { name: 'Medium (32px)', value: 'medium' },
            { name: 'Large (64px)', value: 'large' },
            { name: 'Extra Large (128px)', value: 'xlarge' }
          ]
        },
        paddingMobile: {
          type: 'option',
          pos: 13,
          required: false,
          description: 'Vertical padding (top & bottom) for mobile - defaults to desktop if not set',
          options: [
            { name: 'Default (use desktop)', value: '' },
            { name: 'None (0px)', value: 'none' },
            { name: 'Small (16px)', value: 'small' },
            { name: 'Medium (32px)', value: 'medium' },
            { name: 'Large (64px)', value: 'large' },
            { name: 'Extra Large (128px)', value: 'xlarge' }
          ]
        }
      },
      is_root: false,
      is_nestable: true,
      real_name: 'form_builder',
      color: '#ed8936',
      icon: 'block-form'
    }
  };

  return createOrUpdateComponent('Form Builder', componentData);
}

